// <auto-generated />
using System;
using InventoryDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryDataAccess.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InventoryLibrary.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Productos de aseo del hogar",
                            Name = "Aseo Hogar"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Productos de aseo personal",
                            Name = "Aseo Personal"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Realizar actividades del hogar",
                            Name = "Hogar"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Perfumeria",
                            Name = "Perfumeria"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Video Juegos",
                            Name = "Video Juegos"
                        });
                });

            modelBuilder.Entity("InventoryLibrary.InOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EnteredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEntry")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StorageId");

                    b.ToTable("InOut");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnteredAt = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3450),
                            IsEntry = true,
                            Quantity = 15,
                            StorageId = 1
                        },
                        new
                        {
                            Id = 2,
                            EnteredAt = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3450),
                            IsEntry = true,
                            Quantity = 25,
                            StorageId = 2
                        },
                        new
                        {
                            Id = 3,
                            EnteredAt = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3460),
                            IsEntry = false,
                            Quantity = 15,
                            StorageId = 3
                        },
                        new
                        {
                            Id = 4,
                            EnteredAt = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3460),
                            IsEntry = false,
                            Quantity = 35,
                            StorageId = 4
                        });
                });

            modelBuilder.Entity("InventoryLibrary.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Description = "Aseo personal",
                            Name = "Jabon Ego",
                            TotalQuantity = 15
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Producto de limpieza",
                            Name = "Olimpia",
                            TotalQuantity = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            Description = "Perfume",
                            Name = "Dolce Gabanna",
                            TotalQuantity = 5
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            Description = "Video juego para Switch",
                            Name = "Zelda",
                            TotalQuantity = 6
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Comedor para sala",
                            Name = "Comedor",
                            TotalQuantity = 26
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Caja de shampoo",
                            Name = "Shampoo Ego",
                            TotalQuantity = 26
                        });
                });

            modelBuilder.Entity("InventoryLibrary.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartialQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("Storage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastUpdate = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3340),
                            PartialQuantity = 10,
                            ProductId = 1,
                            WareHouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            LastUpdate = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3370),
                            PartialQuantity = 15,
                            ProductId = 2,
                            WareHouseId = 2
                        },
                        new
                        {
                            Id = 3,
                            LastUpdate = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3370),
                            PartialQuantity = 20,
                            ProductId = 3,
                            WareHouseId = 3
                        },
                        new
                        {
                            Id = 4,
                            LastUpdate = new DateTime(2022, 6, 9, 18, 47, 8, 791, DateTimeKind.Local).AddTicks(3370),
                            PartialQuantity = 25,
                            ProductId = 4,
                            WareHouseId = 4
                        });
                });

            modelBuilder.Entity("InventoryLibrary.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("WareHouse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Norte de la ciudad",
                            Name = "Bodega Norte"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ESte de la ciudad",
                            Name = "Bodega Este"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Oeste de la ciudad",
                            Name = "Bodega Oeste"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Sur de la ciudad",
                            Name = "Bodega Sur"
                        });
                });

            modelBuilder.Entity("InventoryLibrary.InOut", b =>
                {
                    b.HasOne("InventoryLibrary.Storage", "Storage")
                        .WithMany("InOuts")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("InventoryLibrary.Product", b =>
                {
                    b.HasOne("InventoryLibrary.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("InventoryLibrary.Storage", b =>
                {
                    b.HasOne("InventoryLibrary.Product", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryLibrary.WareHouse", "WareHouse")
                        .WithMany("Storages")
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("InventoryLibrary.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventoryLibrary.Product", b =>
                {
                    b.Navigation("Storages");
                });

            modelBuilder.Entity("InventoryLibrary.Storage", b =>
                {
                    b.Navigation("InOuts");
                });

            modelBuilder.Entity("InventoryLibrary.WareHouse", b =>
                {
                    b.Navigation("Storages");
                });
#pragma warning restore 612, 618
        }
    }
}
